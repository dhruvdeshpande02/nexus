from django.contrib.auth.models import AbstractUser
from django.db import models

class User(AbstractUser):
    # Add any additional fields you need for the User model here.
    is_student = models.BooleanField(default=False)
    is_coordinator = models.BooleanField(default=False)
    is_tnpadmin = models.BooleanField(default=False)

class Student(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    S_NAME = models.CharField(max_length=255)
    S_PRN = models.PositiveIntegerField(unique=True)
    S_DOB = models.DateField()
    S_GENDER = models.CharField(max_length=10)
    S_EMAIL = models.EmailField()
    S_AGE = models.PositiveIntegerField()
    Applcn_id = models.CharField(max_length=255)
    S_MOBILE_NO = models.PositiveIntegerField()
    S_ALT_Mobile_NO = models.PositiveIntegerField()
    S_LOCAL_ADDRS = models.CharField(max_length=255)
    S_PERM_ADDRS = models.CharField(max_length=255)
    S_Native_Place = models.CharField(max_length=255)
    X_Percentage = models.DecimalField(max_digits=5, decimal_places=2)
    X_year_of_passing = models.PositiveIntegerField()
    X_board = models.CharField(max_length=255)
    XII_Percentage = models.DecimalField(max_digits=5, decimal_places=2)
    XII_year_of_passing = models.PositiveIntegerField()
    XII_board = models.CharField(max_length=255)
    Diploma_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    Diploma_year_of_passing = models.PositiveIntegerField()
    Diploma_college = models.CharField(max_length=255)
    Diploma_branch = models.CharField(max_length=255)
    Admission_Type = models.CharField(max_length=255)
    Engg_year_of_passing = models.PositiveIntegerField()
    SEM_1_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_2_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_3_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_4_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_5_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_6_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_7_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    SEM_8_sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    AVG_TILL_SEM_cgpa = models.DecimalField(max_digits=5, decimal_places=2)
    AVG_TILL_SEM_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    Live_backlogs = models.PositiveIntegerField()
    Dead_backlogs = models.CharField(max_length=255)
    Year_gap = models.CharField(max_length=255)
    Co_Curricular = models.CharField(max_length=255)
    Extra_Curricular = models.CharField(max_length=255)
    Mini_project = models.CharField(max_length=255)
    Maj_project = models.CharField(max_length=255)
    Prog_lang_known = models.CharField(max_length=255)
    Preference_1 = models.CharField(max_length=255)
    Preference_2 = models.CharField(max_length=255)
    Preference_3 = models.CharField(max_length=255)
    Placement_status = models.CharField(max_length=255)

class Coordinator(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    F_NAME = models.CharField(max_length=255)
    F_PHONE_NO = models.PositiveIntegerField()
    F_EMAIL = models.EmailField()
    F_DEPARTMENT = models.CharField(max_length=255)
    F_Personal_Email = models.EmailField()
    F_ID = models.CharField(max_length=20,unique=True)
    F_INSTITUTE = models.CharField(max_length=255)

class TNPAdmin(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    T_ID = models.CharField(max_length=20,unique=True)
    T_NAME = models.CharField(max_length=255)
    T_EMAIL = models.EmailField()
    T_PH_NO = models.PositiveIntegerField()

class Notice(models.Model):
    title = models.CharField(max_length=100)
    content = models.TextField()
    # Add other notice-related fields
