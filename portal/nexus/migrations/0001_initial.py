# Generated by Django 4.2.5 on 2023-10-24 18:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_coordinator', models.BooleanField(default=False)),
                ('is_tnpadmin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('S_NAME', models.CharField(max_length=255)),
                ('S_PRN', models.PositiveIntegerField(unique=True)),
                ('S_DOB', models.DateField()),
                ('S_GENDER', models.CharField(max_length=10)),
                ('S_EMAIL', models.EmailField(max_length=254)),
                ('S_AGE', models.PositiveIntegerField()),
                ('S_MOBILE_NO', models.PositiveIntegerField()),
                ('S_ALT_Mobile_NO', models.PositiveIntegerField()),
                ('S_LOCAL_ADDRS', models.CharField(max_length=255)),
                ('S_PERM_ADDRS', models.CharField(max_length=255)),
                ('S_Native_Place', models.CharField(max_length=255)),
                ('X_Percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('X_year_of_passing', models.PositiveIntegerField()),
                ('X_board', models.CharField(max_length=255)),
                ('XII_Percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('XII_year_of_passing', models.PositiveIntegerField()),
                ('XII_board', models.CharField(max_length=255)),
                ('Diploma_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('Diploma_year_of_passing', models.PositiveIntegerField(blank=True, null=True)),
                ('Diploma_college', models.CharField(blank=True, max_length=255, null=True)),
                ('Diploma_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('Admission_Type', models.CharField(max_length=255)),
                ('Engg_year_of_passing', models.PositiveIntegerField()),
                ('SEM_1_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_2_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_3_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_4_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_5_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_6_sgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('SEM_7_sgpa', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('SEM_8_sgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('Live_backlogs', models.PositiveIntegerField()),
                ('Dead_backlogs', models.CharField(max_length=255)),
                ('Year_gap', models.CharField(max_length=255)),
                ('Co_Curricular', models.CharField(max_length=255)),
                ('Extra_Curricular', models.CharField(max_length=255)),
                ('Mini_project', models.CharField(max_length=255)),
                ('Maj_project', models.CharField(max_length=255)),
                ('Prog_lang_known', models.CharField(max_length=255)),
                ('Preference_1', models.CharField(max_length=255)),
                ('Preference_2', models.CharField(max_length=255)),
                ('Preference_3', models.CharField(max_length=255)),
                ('Placement_status', models.CharField(max_length=255)),
                ('s_password', models.CharField(default='Provide a strong password', max_length=128)),
                ('AVG_TILL_SEM_cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('AVG_TILL_SEM_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TNPAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('T_ID', models.CharField(max_length=20, unique=True)),
                ('T_NAME', models.CharField(max_length=255)),
                ('T_EMAIL', models.EmailField(max_length=254)),
                ('T_PH_NO', models.PositiveIntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_type', models.CharField(choices=[('CPD', 'CPD'), ('CPPA', 'CPPA')], max_length=4)),
                ('title', models.CharField(max_length=100)),
                ('notice_id', models.CharField(default='00', max_length=20)),
                ('content', models.TextField()),
                ('file', models.FileField(upload_to='notices/')),
                ('notice_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('applicants', models.ManyToManyField(blank=True, related_name='applied_notices', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('F_NAME', models.CharField(max_length=255)),
                ('F_PHONE_NO', models.PositiveIntegerField()),
                ('F_EMAIL', models.EmailField(max_length=254)),
                ('F_DEPARTMENT', models.CharField(max_length=255)),
                ('F_Personal_Email', models.EmailField(max_length=254)),
                ('F_ID', models.CharField(max_length=20, unique=True)),
                ('F_INSTITUTE', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_status', models.CharField(choices=[('Applied', 'Applied'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Applied', max_length=10)),
                ('S_PRN', models.ForeignKey(limit_choices_to={'groups__name': 'Student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('notice_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nexus.notice')),
            ],
        ),
    ]
